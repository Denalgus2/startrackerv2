rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- USER DATA ---

    match /users/{userId} {
      // Any authenticated user can read user data
      allow read: if request.auth != null;
      // A user can only create their own user document
      allow create: if request.auth != null && request.auth.uid == userId;
      // A user can update their own document, or an admin can update any
      allow update: if request.auth != null && (request.auth.uid == userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
      // Only an admin can delete a user
      allow delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /usernames/{username} {
      // Anyone can read usernames (to check for duplicates)
      allow read: if true;
      // Any authenticated user can write to the usernames collection
      allow write: if request.auth != null;
    }

    // --- APPLICATION DATA ---

    match /staff/{staffId} {
      // Any authenticated user can read staff data
      allow read: if request.auth != null;
      // Admins and moderators can create, update, and delete staff
      allow write: if request.auth != null && (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'moderator');
    }

    match /sales/{saleId} {
      // Any authenticated user can read sales data
      allow read: if request.auth != null;
      // Any authenticated user can create sales. Admins/moderators can update and delete them.
      allow create: if request.auth != null;
      allow update: if request.auth != null && (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'moderator');
      allow delete: if request.auth != null && (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'moderator');
    }

    match /shifts/{shiftId} {
      // Any authenticated user can read shifts
      allow read: if request.auth != null;
      // Any authenticated user can create and delete their own shifts
      allow create, delete: if request.auth != null;
    }

    match /ferie/{ferieId} {
      // Any authenticated user can read ferie records
      allow read: if request.auth != null;
      // Any authenticated user can create ferie records
      allow create: if request.auth != null;
    }

    match /weeklyReviews/{reviewId} {
      // Any authenticated user can read weekly reviews
      allow read: if request.auth != null;
      // Only admins and moderators can create weekly reviews
      allow create: if request.auth != null && (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'moderator');
    }

    match /bilagRequests/{requestId} {
      // Any authenticated user can create a bilag request
      allow create: if request.auth != null;
      // Only admins and moderators can read and delete bilag requests
      allow read, delete: if request.auth != null && (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'moderator');
    }

    // --- ANNOUNCEMENTS ---
    match /announcements/{announcementId} {
      // Any authenticated user can read announcements
      allow read: if request.auth != null;
      // Only admins and moderators can create, update, and delete announcements
      allow write: if request.auth != null && (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'moderator');
    }

    // --- CONFIGURATION ---
    match /config/{configId} {
      // Any authenticated user can read config documents (like services)
      allow read: if request.auth != null;
      // Only admins and moderators can write to config documents
      allow write: if request.auth != null && (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'moderator');
    }

    // --- COMPETITIONS ---
    match /competitions/{competitionId} {
      // Any authenticated user can read competitions
      allow read: if request.auth != null;
      // Only admins and moderators can create, update, and delete competitions
      allow write: if request.auth != null && (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'moderator');
    }

  }
}
